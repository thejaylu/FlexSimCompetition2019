<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0510.1418                               -->
<workbook source-build='2018.1.1 (20181.18.0510.1418)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='StateHistory (DraftMod1Utilization)' inline='true' name='federated.0q1h66405xtwzm15dlhx913n3suj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DraftMod1Utilization' name='excel-direct.0rcu7cm1rxih8b15amft712zdqzy'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Jackie/Documents/A University of Florida/Fall 2019/ESI4523 Simulation/Project/Data Files/DraftMod1Utilization.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0rcu7cm1rxih8b15amft712zdqzy' name='StateHistory' table='[StateHistory$]' type='table'>
          <columns gridOrigin='A1:K7743:no:A1:K7743:0' header='yes' outcome='2'>
            <column datatype='integer' name='Scenario' ordinal='0' />
            <column datatype='integer' name='Replication' ordinal='1' />
            <column datatype='string' name='ObjectName' ordinal='2' />
            <column datatype='integer' name='OldState' ordinal='3' />
            <column datatype='integer' name='NewState' ordinal='4' />
            <column datatype='real' name='Time' ordinal='5' />
            <column datatype='real' name='StateDuration' ordinal='6' />
            <column datatype='string' name='OldStateName' ordinal='7' />
            <column datatype='string' name='NewStateName' ordinal='8' />
            <column datatype='real' name='TravelDistance' ordinal='9' />
            <column datatype='real' name='F11' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Scenario</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Scenario]</local-name>
            <parent-name>[StateHistory]</parent-name>
            <remote-alias>Scenario</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Replication</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Replication]</local-name>
            <parent-name>[StateHistory]</parent-name>
            <remote-alias>Replication</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ObjectName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ObjectName]</local-name>
            <parent-name>[StateHistory]</parent-name>
            <remote-alias>ObjectName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OldState</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OldState]</local-name>
            <parent-name>[StateHistory]</parent-name>
            <remote-alias>OldState</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewState</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewState]</local-name>
            <parent-name>[StateHistory]</parent-name>
            <remote-alias>NewState</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[StateHistory]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StateDuration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[StateDuration]</local-name>
            <parent-name>[StateHistory]</parent-name>
            <remote-alias>StateDuration</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OldStateName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[OldStateName]</local-name>
            <parent-name>[StateHistory]</parent-name>
            <remote-alias>OldStateName</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewStateName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NewStateName]</local-name>
            <parent-name>[StateHistory]</parent-name>
            <remote-alias>NewStateName</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TravelDistance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TravelDistance]</local-name>
            <parent-name>[StateHistory]</parent-name>
            <remote-alias>TravelDistance</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F11</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F11]</local-name>
            <parent-name>[StateHistory]</parent-name>
            <remote-alias>F11</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[StateHistory]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K7743:no:A1:K7743:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='UtililizationPerc' datatype='real' name='[Calculation_463870820231229442]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='//sum([UtilizationSum])&#13;&#10;&#13;&#10;SUM([Calculation_55450628852711424])/SUM([StateDuration])' />
      </column>
      <column caption='UtilizationSum' datatype='real' name='[Calculation_55450628852711424]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='//[State Duration]&#13;&#10;&#13;&#10;//IF [New State Name] = &apos;Performing Task&apos;  THEN [State Duration] END&#13;&#10;&#13;&#10;IF CONTAINS([NewStateName], &apos;PerformingTask&apos;) OR  &#13;&#10;    CONTAINS([NewStateName], &apos;WaitingForStaff&apos;) OR  &#13;&#10;    CONTAINS([NewStateName], &apos;WaitingForTask&apos;)&#13;&#10; THEN [StateDuration] &#13;&#10;ELSE 0.0000000001&#13;&#10;END' />
      </column>
      <column caption='New State Name' datatype='string' name='[NewStateName]' role='dimension' type='nominal' />
      <column caption='New State' datatype='integer' name='[NewState]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Object Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[ObjectName]' new-bin='true'>
          <bin default-name='false' value='&quot;AnesthesiologistGroup&quot;'>
            <value>&quot;AnesthesiologistGroup_1&quot;</value>
            <value>&quot;AnesthesiologistGroup_2&quot;</value>
            <value>&quot;AnesthesiologistGroup_3&quot;</value>
            <value>&quot;AnesthesiologistGroup_4&quot;</value>
            <value>&quot;AnesthesiologistGroup_5&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;CirculatingNurse_Group&quot;'>
            <value>&quot;CirculatingNurse_1&quot;</value>
            <value>&quot;CirculatingNurse_2&quot;</value>
            <value>&quot;CirculatingNurse_3&quot;</value>
            <value>&quot;CirculatingNurse_4&quot;</value>
            <value>&quot;CirculatingNurse_5&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;MaintenanceGroup&quot;'>
            <value>&quot;MaintenanceGroup_1&quot;</value>
            <value>&quot;MaintenanceGroup_2&quot;</value>
            <value>&quot;MaintenanceGroup_3&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;PACU_Unit_Group&quot;'>
            <value>&quot;PACU1&quot;</value>
            <value>&quot;PACU2&quot;</value>
            <value>&quot;PACU3&quot;</value>
            <value>&quot;PACU4&quot;</value>
            <value>&quot;PACU5&quot;</value>
            <value>&quot;PACU6&quot;</value>
            <value>&quot;PACU7&quot;</value>
            <value>&quot;PACU8&quot;</value>
            <value>&quot;PACU9&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;PreOP_Nurse_Group&quot;'>
            <value>&quot;PreOP_Nurse_1&quot;</value>
            <value>&quot;PreOP_Nurse_2&quot;</value>
            <value>&quot;PreOP_Nurse_3&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;ScrubNurseGroup&quot;'>
            <value>&quot;ScrubNurse_1&quot;</value>
            <value>&quot;ScrubNurse_2&quot;</value>
            <value>&quot;ScrubNurse_3&quot;</value>
            <value>&quot;ScrubNurse_4&quot;</value>
            <value>&quot;ScrubNurse_5&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;UnitBedGroup&quot;'>
            <value>&quot;UnitBed_1&quot;</value>
            <value>&quot;UnitBed_2&quot;</value>
            <value>&quot;UnitBed_3&quot;</value>
            <value>&quot;UnitBed_4&quot;</value>
            <value>&quot;UnitBed_5&quot;</value>
            <value>&quot;UnitBed_6&quot;</value>
            <value>&quot;UnitBed_7&quot;</value>
            <value>&quot;UnitBed_8&quot;</value>
            <value>&quot;UnitBed_9&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;UnitNurseGroup&quot;'>
            <value>&quot;UnitNurse_1&quot;</value>
            <value>&quot;UnitNurse_2&quot;</value>
            <value>&quot;UnitNurse_3&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Object Name' datatype='string' name='[ObjectName]' role='dimension' type='nominal' />
      <column caption='Old State Name' datatype='string' name='[OldStateName]' role='dimension' type='nominal' />
      <column caption='Old State' datatype='integer' name='[OldState]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Scenario]' role='measure' type='ordinal' />
      <column caption='State Duration' datatype='real' name='[StateDuration]' role='measure' type='quantitative' />
      <column caption='Travel Distance' datatype='real' name='[TravelDistance]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.406369' measure-ordering='alphabetic' measure-percentage='0.593631' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Staff Utilization'>
      <table>
        <view>
          <datasources>
            <datasource caption='StateHistory (DraftMod1Utilization)' name='federated.0q1h66405xtwzm15dlhx913n3suj' />
          </datasources>
          <datasource-dependencies datasource='federated.0q1h66405xtwzm15dlhx913n3suj'>
            <column caption='UtililizationPerc' datatype='real' name='[Calculation_463870820231229442]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//sum([UtilizationSum])&#13;&#10;&#13;&#10;SUM([Calculation_55450628852711424])/SUM([StateDuration])' />
            </column>
            <column caption='UtilizationSum' datatype='real' name='[Calculation_55450628852711424]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//[State Duration]&#13;&#10;&#13;&#10;//IF [New State Name] = &apos;Performing Task&apos;  THEN [State Duration] END&#13;&#10;&#13;&#10;IF CONTAINS([NewStateName], &apos;PerformingTask&apos;) OR  &#13;&#10;    CONTAINS([NewStateName], &apos;WaitingForStaff&apos;) OR  &#13;&#10;    CONTAINS([NewStateName], &apos;WaitingForTask&apos;)&#13;&#10; THEN [StateDuration] &#13;&#10;ELSE 0.0000000001&#13;&#10;END' />
            </column>
            <column caption='New State Name' datatype='string' name='[NewStateName]' role='dimension' type='nominal' />
            <column datatype='string' name='[Object Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[ObjectName]' new-bin='true'>
                <bin default-name='false' value='&quot;AnesthesiologistGroup&quot;'>
                  <value>&quot;AnesthesiologistGroup_1&quot;</value>
                  <value>&quot;AnesthesiologistGroup_2&quot;</value>
                  <value>&quot;AnesthesiologistGroup_3&quot;</value>
                  <value>&quot;AnesthesiologistGroup_4&quot;</value>
                  <value>&quot;AnesthesiologistGroup_5&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CirculatingNurse_Group&quot;'>
                  <value>&quot;CirculatingNurse_1&quot;</value>
                  <value>&quot;CirculatingNurse_2&quot;</value>
                  <value>&quot;CirculatingNurse_3&quot;</value>
                  <value>&quot;CirculatingNurse_4&quot;</value>
                  <value>&quot;CirculatingNurse_5&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;MaintenanceGroup&quot;'>
                  <value>&quot;MaintenanceGroup_1&quot;</value>
                  <value>&quot;MaintenanceGroup_2&quot;</value>
                  <value>&quot;MaintenanceGroup_3&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;PACU_Unit_Group&quot;'>
                  <value>&quot;PACU1&quot;</value>
                  <value>&quot;PACU2&quot;</value>
                  <value>&quot;PACU3&quot;</value>
                  <value>&quot;PACU4&quot;</value>
                  <value>&quot;PACU5&quot;</value>
                  <value>&quot;PACU6&quot;</value>
                  <value>&quot;PACU7&quot;</value>
                  <value>&quot;PACU8&quot;</value>
                  <value>&quot;PACU9&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;PreOP_Nurse_Group&quot;'>
                  <value>&quot;PreOP_Nurse_1&quot;</value>
                  <value>&quot;PreOP_Nurse_2&quot;</value>
                  <value>&quot;PreOP_Nurse_3&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;ScrubNurseGroup&quot;'>
                  <value>&quot;ScrubNurse_1&quot;</value>
                  <value>&quot;ScrubNurse_2&quot;</value>
                  <value>&quot;ScrubNurse_3&quot;</value>
                  <value>&quot;ScrubNurse_4&quot;</value>
                  <value>&quot;ScrubNurse_5&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;UnitBedGroup&quot;'>
                  <value>&quot;UnitBed_1&quot;</value>
                  <value>&quot;UnitBed_2&quot;</value>
                  <value>&quot;UnitBed_3&quot;</value>
                  <value>&quot;UnitBed_4&quot;</value>
                  <value>&quot;UnitBed_5&quot;</value>
                  <value>&quot;UnitBed_6&quot;</value>
                  <value>&quot;UnitBed_7&quot;</value>
                  <value>&quot;UnitBed_8&quot;</value>
                  <value>&quot;UnitBed_9&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;UnitNurseGroup&quot;'>
                  <value>&quot;UnitNurse_1&quot;</value>
                  <value>&quot;UnitNurse_2&quot;</value>
                  <value>&quot;UnitNurse_3&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Object Name' datatype='string' name='[ObjectName]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Scenario]' role='measure' type='ordinal' />
            <column caption='State Duration' datatype='real' name='[StateDuration]' role='measure' type='quantitative' />
            <column-instance column='[ObjectName]' derivation='None' name='[none:ObjectName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scenario]' derivation='None' name='[none:Scenario:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_55450628852711424]' derivation='Sum' name='[sum:Calculation_55450628852711424:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_463870820231229442]' derivation='User' name='[usr:Calculation_463870820231229442:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0q1h66405xtwzm15dlhx913n3suj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0q1h66405xtwzm15dlhx913n3suj].[usr:Calculation_463870820231229442:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0q1h66405xtwzm15dlhx913n3suj].[sum:Calculation_55450628852711424:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q1h66405xtwzm15dlhx913n3suj].[none:ObjectName:nk]'>
            <groupfilter function='level-members' level='[none:ObjectName:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0q1h66405xtwzm15dlhx913n3suj].[none:Scenario:ok]'>
            <groupfilter function='member' level='[none:Scenario:ok]' member='3' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0q1h66405xtwzm15dlhx913n3suj].[none:Scenario:ok]</column>
            <column>[federated.0q1h66405xtwzm15dlhx913n3suj].[none:ObjectName:nk]</column>
            <column>[federated.0q1h66405xtwzm15dlhx913n3suj].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0q1h66405xtwzm15dlhx913n3suj].[:Measure Names]' value='170' />
            <format attr='text-format' field='[federated.0q1h66405xtwzm15dlhx913n3suj].[usr:Calculation_463870820231229442:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0q1h66405xtwzm15dlhx913n3suj].[Object Name (group)]' value='276' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0q1h66405xtwzm15dlhx913n3suj].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0q1h66405xtwzm15dlhx913n3suj].[Object Name (group)]</rows>
        <cols>[federated.0q1h66405xtwzm15dlhx913n3suj].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='30'>
    <window class='worksheet' maximized='true' name='Staff Utilization'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='180'>
            <card param='[federated.0q1h66405xtwzm15dlhx913n3suj].[none:ObjectName:nk]' type='filter' />
            <card param='[federated.0q1h66405xtwzm15dlhx913n3suj].[none:Scenario:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0q1h66405xtwzm15dlhx913n3suj].[Object Name (group)]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;CirculatingNurse_1, CirculatingNurse_2, CirculatingNurse_3 and 2 more&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0q1h66405xtwzm15dlhx913n3suj].[none:ObjectName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Staff Utilization' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9V3BcWZqg9930PhOZSCQSPuG9JUFbvrp6erqmp3f8bGh29aI3PSmkfR7p
      SbERCq0Ukja02l25mZ0d093TY7qKxTIEPeF9wiNhEkjvfV6jB1Szupes6m51VbFI4otgkGDe
      vHn+i7z3uO/8R1AUReGcc15CBEEQVM+6EOec8yw5vwHOeak5vwHOeanRPOsCnPP5bD+8ScI9
      iuXwDqWmK6ROArwy5mNqNUT6YI2R4W7kmjrmP1mlpU7H8OuvIZQr6PQG5GoF1BoSByuEFS+O
      6jFVZw9tTh2KSoNGBVVRQlCpee+v/i/09S0Uyjp++51rVEQZg06DKMkIKjVStYxaq0erUX9p
      sX38w7+g9zt/zOqNv6RvZIy9mMyQR2Ynb2N3cYquBg9tk69jkEpotHoERURGRTl1xNqJSJ9L
      ZLfoYrTdiSiDXqumUhVBULF8/0Piop6Wti66Wr1o1AIyIFaqKAiAjE5vBM5vgG80iqKAcvZ3
      PhVjbm6ewW43kZMoOlmmmkuT1tqRZZlYKEImE+fmX/0Fg2//IbndeVZ2w4x1mNnOpbjYJBLJ
      bTN/L0i1mKenxURQdJEMRXCgoaPDx+yjZf7mP/wZuVyO4dEh7q4ccqG7gWgRLoyN0dpQ++XF
      JsuPY0yEDphbTdJyvYV4XECWZVKxMLlCjvsf/BAaJ6iTT5ld2uTy5CAL/hhtV1o4Pq2yt3gL
      vSDT1OhkJaJDTJ1wsc9LOS5RV1fDX/713/DORCuLWQ1bt5cxW0Q62r2UHf3AeRPoG43JYiKX
      zpDOl6lvqKexuYU6h/lzj1fEItbWccbqZfbiMiaVSI3bg6+zG70Kitk4tvoOnFqJvKzC192H
      VhABhbKk5vvvvkkoVeTqG29g0woMXHyVWp1Ca98wDW77lxqbzaojlcpRqkh4G7w0tnRgM/yn
      z2OFgtrJb1xuZSuQxmUCk6OeZl8nVr0aqVoEfQ3t9VYS2TKNvh6semjqneBbr4zydz/+RwRF
      plwpowAuTxNtXg99/b1UK1UAhPNh0G8uslRleX6Wqs7BheEe1hdncTS0kM9VUUkFnHYTFb2V
      TDiFlgqoKuwcRujs7iV0sIPBUkNvbzvzM4t0djajGJzEAuuIehfNDhWK1Uv89AgtMs1d3WgF
      ONha5TBWoK+9iaLaRmONjvmZGTwdgzTXOb602MRyntmZOayeVvo7Gph9+Ijmdh9lxUQ5G8Gk
      FlAZdSyv7tDk66ASCyLoTXT2DeBfmMHX0U5ONqKkj4jmBfrbakjJDkrJIBajhu39IO19I1Ri
      ARK5MnWtrZRSZUxaEZfbSTgr42twCY9vgGKxSKlU+tICPOecbzpOp1M4rwHOeWn5nIkwhRs/
      +n+5u7j9C0+wubpCWVb44L2fUP2cY2Sxwp279z/7D6nKT96/+dRjK6kg9xd3Hv8cOfATSlfJ
      xo/5x398j49u3acsyr+wXC86iiKzNHOPxfVdFM46kv6laW7fe0Qum+L+ndtML/rJJsPcnrrF
      YSQNKKwtTBPLlkhGjln274JS5v6tT7j1YI5SLsHdqVvsHkeInwaYmpoimsoy/+g+tz76gM2j
      +DOO+ouRxTIz9x7y0zaMIpV5eOcWm/snJEIBPv74Ezb3T8inY8wurj1+3xOjQFI5R042kdxa
      50RzylRApJrPMtpWQyiZwlrXysG6n+6xEaZ/8vd0lyB6EmDqvR9haOgjve+nIqtoaXRymiwy
      MjJOIpnm0a0bJHJF6nwjxJMpHk3dIJEt4vaNEPQ/oliqcu36RUKxLD/6qz/H0zpAZv8OYV2M
      etUxg9e+Q/z4kNj2A/7+0SFD3a1EogkErRFzOcuFNy9xb/aQ1NECDouD7mvfodv75XbcvimU
      Y9vkjT5MmW1SRR8Og0BDWw+agJ9wVmbi0iVu3/yYhWyUi1eucuf2XWpGOtjZP0bn6cYkSURD
      R1QbTRxEM1y5Nsja0hrDl68yc/s2Kp2G65fGuf1olbdeu8rm/APsDtuzDvsLyWczZBIJyoAB
      OF5doLZ/ktDKDElNBY2xhsaGOnLxEPFoCBgAnjIKFDtY5TQlEjzeI5nN4W3vRxDzLMzNgs5K
      jd2Ot87GyUkMb2srE6MDaAxWxoa7iR+uM7sRxOGqweNthFKaSCJDLp9j7yTBO9++wubSOiCz
      F0zwzrevsj57h5LsornWTLVaIV+q0tzo5eQkiMfTyMiFcUwaFVVFy/HmMolcjpaBy5gqSbov
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
